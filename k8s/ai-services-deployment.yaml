apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-services
  namespace: ism-platform
  labels:
    app: ai-services
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-services
  template:
    metadata:
      labels:
        app: ai-services
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-services-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ai-services
        image: ism-ai-services:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8001
          name: metrics
        env:
        - name: DEEPSEEK_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: deepseek-api-key
        - name: SUPABASE_URL
          valueFrom:
            configMapKeyRef:
              name: ism-config
              key: supabase-url
        - name: SUPABASE_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: supabase-key
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "production"
        - name: MAX_WORKERS
          value: "4"
        - name: REQUEST_TIMEOUT
          value: "60"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: ai-models
          mountPath: /app/models
          readOnly: true
        - name: ai-cache
          mountPath: /app/cache
        - name: ai-logs
          mountPath: /app/logs
      volumes:
      - name: ai-models
        persistentVolumeClaim:
          claimName: ai-models-pvc
      - name: ai-cache
        emptyDir: {}
      - name: ai-logs
        persistentVolumeClaim:
          claimName: ai-logs-pvc
      nodeSelector:
        node-type: ai-optimized
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "ai-optimized"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: ai-services
  namespace: ism-platform
  labels:
    app: ai-services
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: metrics
  selector:
    app: ai-services
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-services-hpa
  namespace: ism-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-services
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-services-config
  namespace: ism-platform
data:
  ai-models.yaml: |
    models:
      deepseek-coder:
        max_tokens: 4000
        temperature: 0.3
        timeout: 60
      deepseek-r1:
        max_tokens: 6000
        temperature: 0.2
        timeout: 90
  processing-config.yaml: |
    batch_size: 10
    max_retries: 3
    retry_delay: 5
    timeout: 60
---
apiVersion: v1
kind: Secret
metadata:
  name: ai-secrets
  namespace: ism-platform
type: Opaque
data:
  deepseek-api-key: <base64-encoded-key>
  supabase-key: <base64-encoded-key>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
  namespace: ism-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-logs-pvc
  namespace: ism-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ServiceAccount
metadata:
  name: ai-services-sa
  namespace: ism-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ai-services-role
  namespace: ism-platform
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ai-services-rolebinding
  namespace: ism-platform
subjects:
- kind: ServiceAccount
  name: ai-services-sa
  namespace: ism-platform
roleRef:
  kind: Role
  name: ai-services-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-services-network-policy
  namespace: ism-platform
spec:
  podSelector:
    matchLabels:
      app: ai-services
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ism-platform
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80 